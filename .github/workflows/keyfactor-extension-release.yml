# This is a basic workflow to help you get started with Actions

name: Keyfactor Extension - Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push
  push:
    #only run this workflow when pushing to a branch that contains a release number. ignore -pre
    branches: 
        - 'release/v[12].[0-9]+.[0-9]+' 
        - '!release/v*-pre*' 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Envrionment
        id: setup_env
        run: |
            echo "Setup Envrionment Variables for Workflow"
            echo "Working Path: ${Env:GITHUB_WORKSPACE}"
            $slnPath = (Get-ChildItem -Include *.sln -File -Recurse).fullname
            $relName = "${{ github.ref }}".Split("/")
            $repoName = "${{ github.repository }}".Split("/")
            echo "Solution File Path: ${slnPath}"
            echo "SOLUTION_PATH=${slnPath}" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
            echo "Release Name: $($relName[-1])"
            echo "RELEASE_NAME=$($relName[-1])" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
            echo "Repo Name: $($repoName[-1])"
            echo "REPO_NAME=$($repoName[-1])" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
        
      - uses: actions/setup-dotnet@v1
        with:
            dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel      
            #dotnet-version: 
        
      - name: Add Package Source
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/Keyfactor/index.json -n github -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
      
      # Configures msbuild path envrionment
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1
      
      # Restores Packages to Local Machine
      - name: restore nuget packages
        run: |
          nuget restore ${{ env.SOLUTION_PATH  }}
      
      # Runs a set of commands using the runners shell
      - name: Execute MSBuild Commands
        run: |
          MSBuild.exe $Env:SOLUTION_PATH -p:RestorePackagesConfig=true -p:Configuration=Release 

      - name: Archive Files
        run: |
           md ${{ github.workspace }}\zip\Keyfactor
           Compress-Archive -Path ${{ github.workspace }}\src\GoogleCAProxy\bin\Release\*.dll,${{ github.workspace }}\src\GoogleCAProxy\bin\Release\app.config -DestinationPath ${{ github.workspace }}\zip\Keyfactor\$Env:REPO_NAME.zip -Force
      

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: ${{ env.REPO_NAME}}.zip
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ${{ github.workspace }}\zip\Keyfactor\${{ env.REPO_NAME}}.zip
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error # optional, default is warn

      - name: Create Release
        id: create_release
        uses: zendesk/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ env.RELEASE_NAME  }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
          auto_increment_type: patch
          tag_schema: semantic
      
      - name: Upload Release Asset (x64)
        id: upload-release-asset-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}\zip\Keyfactor\${{ env.REPO_NAME}}.zip
          asset_name: ${{ env.REPO_NAME}}.zip
          asset_content_type: application/zip                 
