# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    # runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Configures msbuild path envrionment
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1
      
      # Restores Packages to Local Machine
      - name: restore nuget packages
        run: |
          nuget restore $Env:GITHUB_WORKSPACE\src\GoogleCAProxy\GoogleCAProxy.sln
      
      # Runs a set of commands using the runners shell
      - name: Execute MSBuild Commands
        run: |
          MSBuild.exe $Env:GITHUB_WORKSPACE\src\GoogleCAProxy\GoogleCAProxy.sln -p:RestorePackagesConfig=true -p:Configuration=Release 
        
      - name: Archive Files
        run: |
          Compress-Archive -Path $Env:GITHUB_WORKSPACE\src\GoogleCAProxy\bin\Release\*.dll,$Env:GITHUB_WORKSPACE\src\GoogleCAProxy\bin\Release\app.config -DestinationPath C:\tools\google-cloudca-gateway.zip

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: google-cloudca-gateway.zip
          # A file, directory or wildcard pattern that describes what to upload
          path: C:\tools\google-cloudca-gateway.zip
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error # optional, default is warn
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated Release by GitHub Action CI
          draft: false
          prerelease: true      
      
      - name: Upload Release Asset (x64)
        id: upload-release-asset-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: C:\tools\google-cloudca-gateway.zip
          asset_name: google-cloudca-gateway.zip
          asset_content_type: application/zip          

      
      # Clean up local directory

          
