# This is a basic workflow to help you get started with Actions

name: CI - Dot Net

# Controls when the action will run. 
on:
  # Triggers the workflow on push
  push:
    branches: [ main ]
    #tags:
    #   - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Find Solution File
        id: find_sln
        run: |
            echo "Working Path: ${Env:GITHUB_WORKSPACE}"
            echo "Find SLN file"
            $slnPath = (Get-ChildItem -Include *.sln -File -Recurse).fullname
            echo "Solution File Path: ${slnPath}"
            echo '::set-output name=SOLUTION_PATH::${slnPath}'
        
      - uses: actions/setup-dotnet@v1
        with:
            dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel      
            #dotnet-version: 
        
      - name: Add Package Source
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/Keyfactor/index.json -n github -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
      
      # Configures msbuild path envrionment
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1
      
      # Restores Packages to Local Machine
      - name: restore nuget packages
        run: |
          nuget restore ${{ steps.find_sln.outputs.SOLUTION_PATH  }}
      
      # Runs a set of commands using the runners shell
      - name: Execute MSBuild Commands
        run: |
          MSBuild.exe $Env:GITHUB_WORKSPACE\src\GoogleCAProxy\GoogleCAProxy.sln -p:RestorePackagesConfig=true -p:Configuration=Release 

      - name: Archive Files
        run: |
           md ${{ github.workspace }}\zip\Keyfactor
           Compress-Archive -Path ${{ github.workspace }}\src\GoogleCAProxy\bin\Release\*.dll,${{ github.workspace }}\src\GoogleCAProxy\bin\Release\app.config -DestinationPath ${{ github.workspace }}\zip\$Env:GITHUB_REPOSITORY.zip -Force
      

    #  - name: Upload a Build Artifact
    #    uses: actions/upload-artifact@v2.2.2
    #    with:
    #      # Artifact name
    #      name: google-cloudca-gateway.zip
    #      # A file, directory or wildcard pattern that describes what to upload
    #      path: |
    #        ${{ github.workspace }}\zip\${{ github.repository }}.zip
    #      # The desired behavior if no files are found using the provided path.
    #      if-no-files-found: error # optional, default is warn
          
    #  - name: Create Release
    #    id: create_release
    #    uses: zendesk/action-create-release@v1
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    with:
    #      release_name: Release ${{ github.ref }}
    #      body: |
    #        Changes in this Release
    #        - First Change
    #        - Second Change
    #      draft: false
    #      prerelease: true
    #      prerelease_suffix: pre
    #      auto_increment_type: prerelease
    #      tag_schema: semantic

    #  - name: Download ZIP
    #    uses: actions/download-artifact@v2
    #    with:
    #      name: google-cloudca-gateway.zip
      
    #  - name: Upload Release Asset (x64)
    #    id: upload-release-asset-x64
    #    uses: actions/upload-release-asset@v1
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    with:
    #      upload_url: ${{ steps.create_release.outputs.upload_url }}
    #      asset_path: ${{ github.workspace }}\zip\${{ github.repository }}.zip
    #      asset_name: google-cloudca-gateway.zip
    #      asset_content_type: application/zip          

      
      # Clean up local directory

          
